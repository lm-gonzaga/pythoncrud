# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\updateUser.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
from PyQt5 import QtCore, QtGui, QtWidgets
import mysql.connector
from PyQt5.QtWidgets import QMessageBox

connect = mysql.connector.connect(
    host='db3.super10.com.br',
    user='ludwig.gonzaga',
    password='61u7Mfy&iS#x',
    database='tests'
)


class Ui_updateUser(object):
    def setupUi(self, updateUser):
        updateUser.setObjectName("updateUser")
        updateUser.resize(1020, 624)
        self.labelTitulo = QtWidgets.QLabel(updateUser)
        self.labelTitulo.setGeometry(QtCore.QRect(6, 10, 1001, 51))
        self.labelTitulo.setObjectName("labelTitulo")
        self.tableUserData = QtWidgets.QTableWidget(updateUser)
        self.tableUserData.setGeometry(QtCore.QRect(10, 190, 1001, 91))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.tableUserData.setFont(font)
        self.tableUserData.setAlternatingRowColors(True)
        self.tableUserData.setWordWrap(False)
        self.tableUserData.setObjectName("tableUserData")
        self.tableUserData.setColumnCount(5)
        self.tableUserData.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        item.setBackground(QtGui.QColor(0, 0, 0, 2))
        self.tableUserData.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.tableUserData.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        font.setKerning(True)
        item.setFont(font)
        self.tableUserData.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.tableUserData.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.tableUserData.setHorizontalHeaderItem(4, item)
        self.btnAtualizar = QtWidgets.QPushButton(updateUser)
        self.btnAtualizar.setGeometry(QtCore.QRect(400, 490, 141, 41))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.btnAtualizar.setFont(font)
        self.btnAtualizar.setObjectName("btnAtualizar")
        self.btnSair = QtWidgets.QPushButton(updateUser)
        self.btnSair.setGeometry(QtCore.QRect(400, 560, 141, 41))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.btnSair.setFont(font)
        self.btnSair.setObjectName("btnSair")
        self.labelMailCadstado = QtWidgets.QLabel(updateUser)
        self.labelMailCadstado.setGeometry(QtCore.QRect(10, 70, 211, 31))
        self.labelMailCadstado.setObjectName("labelMailCadstado")
        self.lineFindMail = QtWidgets.QLineEdit(updateUser)
        self.lineFindMail.setGeometry(QtCore.QRect(220, 69, 341, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lineFindMail.setFont(font)
        self.lineFindMail.setObjectName("lineFindMail")
        self.btnBuscar = QtWidgets.QPushButton(updateUser)
        self.btnBuscar.setGeometry(QtCore.QRect(600, 70, 141, 41))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.btnBuscar.setFont(font)
        self.btnBuscar.setObjectName("btnBuscar")
        self.labelTitulo_2 = QtWidgets.QLabel(updateUser)
        self.labelTitulo_2.setGeometry(QtCore.QRect(10, 130, 1001, 51))
        self.labelTitulo_2.setObjectName("labelTitulo_2")
        self.labelTitulo_3 = QtWidgets.QLabel(updateUser)
        self.labelTitulo_3.setGeometry(QtCore.QRect(10, 300, 1001, 51))
        self.labelTitulo_3.setObjectName("labelTitulo_3")
        self.label = QtWidgets.QLabel(updateUser)
        self.label.setGeometry(QtCore.QRect(30, 390, 91, 31))
        self.label.setObjectName("label")
        self.lineEditName = QtWidgets.QLineEdit(updateUser)
        self.lineEditName.setGeometry(QtCore.QRect(120, 389, 831, 31))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.lineEditName.setFont(font)
        self.lineEditName.setObjectName("lineEditName")
        self.label_2 = QtWidgets.QLabel(updateUser)
        self.label_2.setGeometry(QtCore.QRect(30, 440, 91, 31))
        self.label_2.setObjectName("label_2")
        self.lineEditPass = QtWidgets.QLineEdit(updateUser)
        self.lineEditPass.setGeometry(QtCore.QRect(120, 439, 831, 31))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.lineEditPass.setFont(font)
        self.lineEditPass.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEditPass.setObjectName("lineEditPass")

        self.retranslateUi(updateUser)
        self.btnSair.clicked.connect(updateUser.close)  # type: ignore
        QtCore.QMetaObject.connectSlotsByName(updateUser)
        self.btnBuscar.clicked.connect(self.buscar)
        self.btnAtualizar.clicked.connect(self.atualizar)

    def retranslateUi(self, updateUser):
        _translate = QtCore.QCoreApplication.translate
        updateUser.setWindowTitle(_translate("updateUser", "Editar Usuário"))
        self.labelTitulo.setText(_translate("updateUser",
                                            "<html><head/><body><p align=\"center\"><span style=\" font-size:22pt; font-weight:600;\">EDITAR DADOS</span></p></body></html>"))
        item = self.tableUserData.horizontalHeaderItem(0)
        item.setText(_translate("updateUser", "ID User"))
        item = self.tableUserData.horizontalHeaderItem(1)
        item.setText(_translate("updateUser", "Nome"))
        item = self.tableUserData.horizontalHeaderItem(2)
        item.setText(_translate("updateUser", "Senha"))
        item = self.tableUserData.horizontalHeaderItem(3)
        item.setText(_translate("updateUser", "E-mail"))
        item = self.tableUserData.horizontalHeaderItem(4)
        item.setText(_translate("updateUser", "URL Photo"))
        self.btnAtualizar.setText(_translate("updateUser", "Atualizar"))
        self.btnSair.setText(_translate("updateUser", "Sair"))
        self.labelMailCadstado.setText(_translate("updateUser",
                                                  "<html><head/><body><p><span style=\" font-size:16pt; font-weight:600;\">E-mail cadastrado:</span></p></body></html>"))
        self.btnBuscar.setText(_translate("updateUser", "Buscar"))
        self.labelTitulo_2.setText(_translate("updateUser",
                                              "<html><head/><body><p align=\"center\"><span style=\" font-size:22pt; font-weight:600;\">DADOS LOCALIZADOS</span></p></body></html>"))
        self.labelTitulo_3.setText(_translate("updateUser",
                                              "<html><head/><body><p align=\"center\"><span style=\" font-size:22pt; font-weight:600;\"> PREENCHA O DADO A SER EDITADO</span></p></body></html>"))
        self.label.setText(_translate("updateUser",
                                      "<html><head/><body><p><span style=\" font-size:16pt; font-weight:600;\">Nome:</span></p></body></html>"))
        self.label_2.setText(_translate("updateUser",
                                        "<html><head/><body><p><span style=\" font-size:16pt; font-weight:600;\">Senha:</span></p></body></html>"))

    def buscar(self):

        self.usuario = []
        self.email = str(self.lineFindMail.text())

        if (self.email == ''):  # verifica se o campo de busca de email está vazio
            msg = QMessageBox()
            msg.setIcon(msg.Warning)
            msg.setWindowTitle("Erro: Campo Vazio")
            msg.setText("O campo Email Cadastrado está vazio! Deve preencher o campo com o e-mail cadastrado! ")
            msg.exec()
            print("campo para inserir email está vazio")

        elif (self.email == ' '):  # verifica se o campo de busca de email está com somente um espaço em branco

            msg = QMessageBox()
            msg.setIcon(msg.Warning)
            msg.setWindowTitle("Dados inseridos")
            msg.setText("O campo Email Cadastrado está vazio! Deve preencher o campo com o e-mail cadastrado!")
            msg.exec()
            print("campo para inserir email está com um espaço em branco")

        else:  # executar a busca

            print("campo de email: " + self.email)
            print("----------------------------------------------------")

            cursor = connect.cursor()
            comando = f'SELECT * FROM user WHERE email = "{self.email}";'
            cursor.execute(comando)
            self.usuario = cursor.fetchall()
            row_count = cursor.rowcount
            print(f"Total de linhas atualizadas: {row_count}")
            print("-------------------------------------------")
            cursor.close()

            if (row_count < 1):

                print("Usuário não foi localizado")
                self.lineEditName.setText("")
                self.lineEditPass.setText("")

                msg = QMessageBox()
                msg.setIcon(msg.Warning)
                msg.setWindowTitle("Dados inseridos")
                msg.setText(f'Não foram localizados usuários para o email {self.email}')
                msg.exec()

            else:

                print("usuário foi localizado")
                self.tableUserData.setRowCount(len(self.usuario))
                self.tableUserData.setColumnCount(4)
                print("email inserido foi: " f'{self.email}')
                print("-------------------------------------------")

                self.name = str(self.usuario[0][1])
                self.password = str(self.usuario[0][2])
                print(self.name)
                print(self.password)
                print("-------------------------------------------")

                for i in range(0, len(self.usuario)):
                    for j in range(0, 4):
                        self.tableUserData.setItem(i, j, QtWidgets.QTableWidgetItem(str(self.usuario[i][j])))
                self.lineEditName.setText(self.name)
                self.lineEditPass.setText(self.password)

    def atualizar(self):

        self.editName = str(self.lineEditName.text())
        self.editPass = str(self.lineEditPass.text())

        cursor = connect.cursor()

        comando = f'UPDATE user SET name = "{self.editName}", pass = "{self.editPass}" WHERE email = "{self.email}" ;'
        cursor.execute(comando)
        connect.commit()
        row_count = cursor.rowcount
        cursor.close()
        print(row_count)

        msg = QMessageBox()
        msg.setIcon(msg.Information)
        msg.setWindowTitle("Confirmação")
        msg.setText(f'Dados atualizados com sucesso!')
        msg.exec()
        print("Dados atualizados com sucesso!")
        print("-----------------------------------------------------")

if __name__ == "__main__":

    app = QtWidgets.QApplication(sys.argv)
    Principal = QtWidgets.QMainWindow()
    ui = Ui_updateUser()
    ui.setupUi(Principal)
    Principal.show()
    sys.exit(app.exec_())